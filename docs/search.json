[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "A GLOBAL DATASET OF PANDEMIC- AND EPIDEMIC-PRONE DISEASE\n\n\nOUTBREAKS"
  },
  {
    "objectID": "content/outreach/outreach.html",
    "href": "content/outreach/outreach.html",
    "title": "Outreach",
    "section": "",
    "text": "Peer-reviewed publications\n\nTorres Munguía, Juan Armando; Badarau, Florina Cristina; Díaz Pavez, Luis Rodrigo; Martínez-Zarzoso, Inmaculada; Wacker, Konstantin M. (2022). A global dataset of pandemic- and epidemic-prone disease outbreaks. Scientific data, 9 (1). DOI: 10.1038/s41597-022-01797-2. Retrieved from: https://www.nature.com/articles/s41597-022-01797-2\n\n Download .bib file (compatible with LaTeX) \n\n  \n  \n    \n      \n        \n        \n      \n        \n        \n    \n  \n\n\n\n\nAwards & nominations\nENLIGHT Open Science Award 2023  Falling Walls Science Breakthrough of the Year 2023 in Science & Innovation Management\n\n\nEvents\nA global dataset of pandemic- and epidemic-prone disease outbreaks. EM-DAT International Disaster Database. Scientific & Technical Advisory Group (STAG) Meeting, March 18, 2024. Potchefstroom, South Africa. Presentation here!\nA global dataset of pandemic- and epidemic-prone disease outbreaks. ENLIGHT Open Science Award Ceremony 2023, May 11, 2023. Presentation here!\n\n\nMedia articles\nPredicting epidemics isn’t easy: Researchers have created a global dataset to help in Medical Xpress on April 18, 2023. Read here! \nPredicting epidemics isn’t easy. We’ve created a global dataset to help in Beijing Bulletin on April 18, 2023. Read here! \nPredicting epidemics isn’t easy. We’ve created a global dataset to help in The Conversation on April 17, 2023. Read here! \nPredicting epidemics isn’t easy. We’ve created a global dataset to help in UNDRR PreventionWeb on April 17, 2023. Read here! \nCongratulations to the winners of the Open Science Award 2023! in ENLIGHT on March 31, 2023. Read here! \nENLIGHT funded research publishes an accessible, open, global dataset of pandemic- and epidemic-prone disease outbreaks in Springer Nature’s Scientific Data in ENLIGHT on February 06, 2023. Read here! \nFrom unstructured administrative records to an accessible, open, global dataset of pandemic- and epidemic-prone disease outbreaks in Springer Nature Research Communities on November 11, 2022. Read here!"
  },
  {
    "objectID": "content/data_analysis/data_explorer.html",
    "href": "content/data_analysis/data_explorer.html",
    "title": "Data explorer",
    "section": "",
    "text": "Methodological note\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nData records\n\n\n\n\n\nCountry: Name of the country where the outbreak occurred; Year: Year of occurrence of the outbreak; Type of disease: Type of disease according to the ICD-10; Disease: Name of disease according to the ICD-10.\n\n\n\n\n\n\n\n\n\nTime & geographic data coverage\n\n\n\n\n\nThe last version of the dataset contains information on 3050 outbreaks:  Temporal coverage: 01/01/1996 - 30/09/2024  Geographic coverage: 236  Number of diseases included: 85\n\n\n\n\n\n\n\n\n\nHow to use the data explorer?\n\n\n\n\n\nUse the search filters at the top of each column to narrow down specific countries, years, or diseases. The search is case-insensitive and does not use regular expressions. You can sort the columns by clicking on the headers (e.g., Country, Year). By default, the data is ordered alphabetically by Country and chronologically by Year, from the most recent to the oldest. Scroll through the table to view additional rows of the dataset. You can export the data in various formats (.csv, .xlsx, PDF) or copy selected information for further analysis using the available tools.",
    "crumbs": [
      "Data explorer"
    ]
  },
  {
    "objectID": "content/about.html",
    "href": "content/about.html",
    "title": "About the DISEASE OUTBREAKS DATA project",
    "section": "",
    "text": "The DISEASE OUTBREAKS DATA project arose from the need for open, reliable information on pandemic- and epidemic-prone disease outbreaks, offering broad coverage of diseases, time periods, and geography, and ensuring statistical soundness for research purposes.\nThe dataset is the result of a collaborative effort by a team of researchers from the University of Göttingen, the University of Groningen, and the University of Bordeaux. The project was made possible through financial support from the ENLIGHT network, the German Academic Exchange Service (DAAD), and the Federal Ministry of Education and Research (BMBF) in Germany.\nIn the first version of the dataset, a total of 2227 outbreaks of 70 different infectious diseases were found, occurring in a total of 233 countries and territories from January 1996 until March 2022. These findings are published in Springer Nature’s Scientific Data. Read the paper by clicking here! Additionally, the data, metadata, and the code to replicate the first version of this dataset are publicly available on Figshare. You can download them by clicking here!.\n\n\n\n\n\n\nUnit of analysis\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nTime & geographic data coverage\n\n\n\n\n\nThe last version of the dataset contains information on 3050 outbreaks:  Temporal coverage: 01/01/1996 - 30/09/2024  Geographic coverage: 236  Number of diseases included: 85\n\n\n\n\nMethodology\n\nSource\nThe sources for the disease outbreaks data project are the Disease Outbreak News (DONs) and the Coronavirus Dashboard produced by the World Health Organization (WHO). This information is issued under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Intergovernmental Organization (CC BY-NC-SA 3.0 IGO) license, which allows users to freely copy, reproduce, reprint, distribute, translate, and adapt WHO materials for non-commercial purposes.\nThe information from the DONs includes all reports on confirmed acute public health events or potential events of concern that have occurred since 1996. Specifically, DONs include events of:\n\nUnknown cause but with significant or potential health concern that may affect international travel or trade.\nKnown cause with demonstrated ability to produce a serious public health impact and spread internationally.\nHigh public concern that could potentially disrupt required public health interventions or international travel and trade.\n\nThe Coronavirus Dashboard presents information reported by official public health authorities from countries and territories worldwide.\n\n\n\nData collection and integration processes\nThe following figure provides a schematic overview of the data collection and integration processes used in the disease outbreaks data project.\n\n\nSchematic Overview of Data Collection and Integration Processes\n\n\n\n(A) Data collection and database of the DONs; (B) Data collection and database of the Coronavirus Dashboard; (C) Geo-spatial information.  Fuente: Torres Munguía, Badarau, Díaz Pavez, Martínez-Zarzoso & Wacker. A global dataset of pandemic- and epidemic-prone disease outbreaks. Sci Data 9, 683 (2022).  https://doi.org/10.1038/s41597-022-01797-2\n\n\nIn stage (A), DONs are collected from the WHO website. This process was automated using an R script to extract the information from the DONs. The earliest DON records a cholera outbreak reported on 22 January 1996 in Cabo Verde, Côte d’Ivoire, the Islamic Republic of Iran, Iraq, and Senegal.\nTo ensure standardized concepts and definitions, official short country names in English, according to ISO-3166-23 and International Statistical Classification of Diseases and Related Health Problems 10th Revision, are used.\nThree recording issues need to be tackled at stage (A):\n\nSome DONs report multiple diseases.\nSome DONs report disease outbreaks occurring in more than one country.\nSome DONs register the same outbreak multiple times due to situation updates.\n\nTo resolve these issues at stage (A):\n\nFor DONs reporting more than one disease (for instance, DON0065 on influenza and malaria in Ghana, or DON1094 on chikungunya and dengue in the southwest Indian Ocean) and/or reporting more than one country (e.g., DON1540 about an outbreak of polio in Angola and the Democratic Republic of the Congo, or DON0617 on a meningococcal disease outbreak in the Great Lakes area) the DON is replicated for each diseases (or country). For instance, DON0617 informs of an outbreak that occurred in Burundi, Rwanda, and Tanzania (Great Lakes area). Therefore, this DON was registered three times, one for each country.\nTo avoid multiplicity issues, we deleted all DONs that reported the same disease in the same country more than once in a calendar year. Variants or mutations of viruses, such as avian influenza A(H1N1), A(H1N2), A(H5N1), A(H3N2), etc., were considered the same disease, i.e., influenza due to identified zoonotic or pandemic influenza virus. This ensured only one observation per disease, country, and year.\n\nIn stage (B), given that outbreaks related to COVID-19 are not included in the DONs, this information is extracted from the Coronavirus Dashboard. Specifically, we dichotomized the data on cases per country per year, assigning a value of one if a country had at least one reported case of Coronavirus, and zero otherwise. For standardization, we followed the same approach as in stage (A), using the official short country names in English according to ISO-3166-23 and ICD-10-31.\nIn stage (C), the geographic information from the World Administrative Boundaries - Countries and Territories dataset by Société OPENDATASOFT (available at this link) is merged with the resulting data from stages (A) and (B)."
  },
  {
    "objectID": "content/data_analysis/disease_outbreaks_map.html",
    "href": "content/data_analysis/disease_outbreaks_map.html",
    "title": "Disease outbreaks map",
    "section": "",
    "text": "Methodological note\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nHow to use the disease outbreaks map?\n\n\n\n\n\nUse your mouse to zoom in and out by scrolling, or click the + and − buttons on the top right of the map. To pan across the map, click and hold your mouse while moving it in the desired direction. Hover over any country to see the specific information that will be displayed in a pop-up label. The map is color-coded based on the frequency of outbreaks in each country. Darker shades indicate a higher number of outbreaks, while lighter shades represent fewer outbreaks. The legend on the bottom left shows the number of outbreaks corresponding to each color.  To expand the map, click the icon in the bottom left corner of the map.\n\n\n\n\n\n\n\n\n\nUsage notes\n\n\n\n\n\nThe map presented here demonstrate the potential use of disease outbreaks data for the research community. By visualizing the geographic distribution of disease outbreaks, the map allows policymakers to identify the countries most vulnerable to outbreaks and assess their preparedness. This can inform the development of strategies and policies aimed at mitigating the spread of future outbreaks, considering regional susceptibility and resilience.  Further research using this database can integrate these findings with other sources to explore the factors driving countries’ exposure to pandemic- and epidemic-prone diseases, potentially improving response efforts in the future.\n\n\n\n\nA map of the outbreaks occurred from 2000 to 2023 associated with all the diseases\nThis map illustrates the global distribution of disease outbreaks that occurred between 2000 and 2023, encompassing all reported diseases. It provides a comprehensive overview of the regions most affected by outbreaks over the last two decades, allowing for an intuitive comparison of disease impact across different countries and regions.  Notably, there is a higher concentration of disease outbreaks in Sub-Saharan Africa. As discussed in Torres Munguía, Badarau, Díaz Pavez, Martínez-Zarzoso & Wacker (2022), the infectious diseases primarily driving this pattern include cholera, acute poliomyelitis, meningococcal meningitis, and yellow fever.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA map of the outbreaks occurred in Africa from 1996 to 2023 associated with arthropod-borne viral fevers and viral haemorrhagic fevers\nThis map presents the distribution of disease outbreaks across Africa between 1996 and 2023 related to arthropod-borne viral fevers and viral haemorrhagic fevers. Arthropod-borne viral fevers (also known as arboviral diseases) are infections caused by viruses transmitted through bites from infected arthropods, such as mosquitoes and ticks. On the other hand, viral haemorrhagic fevers are spread primarily through the interaction of infected rodents and humans. Both of these groups of diseases are highly prone to epidemics and are classified under “A90-A99” in the International Classification of Diseases (ICD-10).  This map highlights the occurrence of arthropod-borne viral fevers and viral haemorrhagic fevers, including Chikungunya, Dengue, Yellow Fever, Zika Virus, Oropouche Virus, Lassa Fever, Ebola, and Marburg Virus Disease, among others. Many of these diseases are endemic in parts of Africa, leading to recurring outbreaks that pose significant public health challenges. By visualizing the outbreaks of these diseases, this map provides insights into the geographic spread and intensity of these epidemics, allowing for a clearer understanding of regions most affected by arboviral and haemorrhagic fevers over time.",
    "crumbs": [
      "Disease outbreaks map"
    ]
  },
  {
    "objectID": "content/get_involved/get_involved.html",
    "href": "content/get_involved/get_involved.html",
    "title": "Get involved",
    "section": "",
    "text": "Get involved\nThank you for your interest in the DISEASE OUTBREAKS DATA project. \nYou can use this space to contact me for queries, collaboration ideas, or comments.\n\n \n\n\n\n\n\n\n\n\nName \nEmail address \nMessage\n\n\nSend message"
  },
  {
    "objectID": "content/about.html#about-the-disease-outbreaks-data-project",
    "href": "content/about.html#about-the-disease-outbreaks-data-project",
    "title": "open_data |> disease_outbreaks",
    "section": "",
    "text": "The DISEASE OUTBREAKS DATA project arose from the need for open, reliable information on pandemic- and epidemic-prone disease outbreaks, offering broad coverage of diseases, time periods, and geography, and ensuring statistical soundness for research purposes.\nThe dataset is the result of a collaborative effort by a team of researchers from the University of Göttingen, the University of Groningen, and the University of Bordeaux. The project was made possible through financial support from the ENLIGHT network, the German Academic Exchange Service (DAAD), and the Federal Ministry of Education and Research (BMBF) in Germany.\nIn the first version of the dataset, a total of 2227 outbreaks of 70 different infectious diseases were found, occurring in a total of 233 countries and territories from January 1996 until March 2022. These findings are published in Springer Nature’s Scientific Data. Read the paper by clicking here! Additionally, the data, metadata, and the code to replicate the first version of this dataset are publicly available on Figshare. You can download them by clicking here!.\n\n\n\n\n\n\nUnit of analysis\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nTime & geographic data coverage\n\n\n\n\n\nThe last version of the dataset contains information on 3050 outbreaks:  Temporal coverage: 01/01/1996 - 30/09/2024  Geographic coverage: 236  Number of diseases included: 85\n\n\n\n\n\n\n\nThe sources for the disease outbreaks data project are the Disease Outbreak News (DONs) and the Coronavirus Dashboard produced by the World Health Organization (WHO). This information is issued under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Intergovernmental Organization (CC BY-NC-SA 3.0 IGO) license, which allows users to freely copy, reproduce, reprint, distribute, translate, and adapt WHO materials for non-commercial purposes.\nThe information from the DONs includes all reports on confirmed acute public health events or potential events of concern that have occurred since 1996. Specifically, DONs include events of:\n\nUnknown cause but with significant or potential health concern that may affect international travel or trade.\nKnown cause with demonstrated ability to produce a serious public health impact and spread internationally.\nHigh public concern that could potentially disrupt required public health interventions or international travel and trade.\n\nThe Coronavirus Dashboard presents information reported by official public health authorities from countries and territories worldwide.\n\n\n\n\nThe following figure provides a schematic overview of the data collection and integration processes used in the disease outbreaks data project.\n\n\nSchematic Overview of Data Collection and Integration Processes\n\n\n\n(A) Data collection and database of the DONs; (B) Data collection and database of the Coronavirus Dashboard; (C) Geo-spatial information.  Fuente: Torres Munguía, Badarau, Díaz Pavez, Martínez-Zarzoso & Wacker. A global dataset of pandemic- and epidemic-prone disease outbreaks. Sci Data 9, 683 (2022).  https://doi.org/10.1038/s41597-022-01797-2\n\n\nIn stage (A), DONs are collected from the WHO website. This process was automated using an R script to extract the information from the DONs. The earliest DON records a cholera outbreak reported on 22 January 1996 in Cabo Verde, Côte d’Ivoire, the Islamic Republic of Iran, Iraq, and Senegal.\nTo ensure standardized concepts and definitions, official short country names in English, according to ISO-3166-23 and International Statistical Classification of Diseases and Related Health Problems 10th Revision, are used.\nThree recording issues need to be tackled at stage (A):\n\nSome DONs report multiple diseases.\nSome DONs report disease outbreaks occurring in more than one country.\nSome DONs register the same outbreak multiple times due to situation updates.\n\nTo resolve these issues at stage (A):\n\nFor DONs reporting more than one disease (for instance, DON0065 on influenza and malaria in Ghana, or DON1094 on chikungunya and dengue in the southwest Indian Ocean) and/or reporting more than one country (e.g., DON1540 about an outbreak of polio in Angola and the Democratic Republic of the Congo, or DON0617 on a meningococcal disease outbreak in the Great Lakes area) the DON is replicated for each diseases (or country). For instance, DON0617 informs of an outbreak that occurred in Burundi, Rwanda, and Tanzania (Great Lakes area). Therefore, this DON was registered three times, one for each country.\nTo avoid multiplicity issues, we deleted all DONs that reported the same disease in the same country more than once in a calendar year. Variants or mutations of viruses, such as avian influenza A(H1N1), A(H1N2), A(H5N1), A(H3N2), etc., were considered the same disease, i.e., influenza due to identified zoonotic or pandemic influenza virus. This ensured only one observation per disease, country, and year.\n\nIn stage (B), given that outbreaks related to COVID-19 are not included in the DONs, this information is extracted from the Coronavirus Dashboard. Specifically, we dichotomized the data on cases per country per year, assigning a value of one if a country had at least one reported case of Coronavirus, and zero otherwise. For standardization, we followed the same approach as in stage (A), using the official short country names in English according to ISO-3166-23 and ICD-10-31.\nIn stage (C), the geographic information from the World Administrative Boundaries - Countries and Territories dataset by Société OPENDATASOFT (available at this link) is merged with the resulting data from stages (A) and (B)."
  },
  {
    "objectID": "content/data_analysis/data_explorer.html#data-explorer",
    "href": "content/data_analysis/data_explorer.html#data-explorer",
    "title": "open_data |> disease_outbreaks",
    "section": "",
    "text": "Methodological note\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nData records\n\n\n\n\n\nCountry: Name of the country where the outbreak occurred; Year: Year of occurrence of the outbreak; Type of disease: Type of disease according to the ICD-10; Disease: Name of disease according to the ICD-10.\n\n\n\n\n\n\n\n\n\nTime & geographic data coverage\n\n\n\n\n\nThe last version of the dataset contains information on 3050 outbreaks:  Temporal coverage: 01/01/1996 - 30/09/2024  Geographic coverage: 236  Number of diseases included: 85\n\n\n\n\n\n\n\n\n\nHow to use the data explorer?\n\n\n\n\n\nUse the search filters at the top of each column to narrow down specific countries, years, or diseases. The search is case-insensitive and does not use regular expressions. You can sort the columns by clicking on the headers (e.g., Country, Year). By default, the data is ordered alphabetically by Country and chronologically by Year, from the most recent to the oldest. Scroll through the table to view additional rows of the dataset. You can export the data in various formats (.csv, .xlsx, PDF) or copy selected information for further analysis using the available tools.",
    "crumbs": [
      "Data explorer"
    ]
  },
  {
    "objectID": "content/data_analysis/disease_outbreaks_map.html#disease-outbreaks-map",
    "href": "content/data_analysis/disease_outbreaks_map.html#disease-outbreaks-map",
    "title": "open_data |> disease_outbreaks",
    "section": "",
    "text": "Methodological note\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nHow to use the disease outbreaks map?\n\n\n\n\n\nUse your mouse to zoom in and out by scrolling, or click the + and − buttons on the top right of the map. To pan across the map, click and hold your mouse while moving it in the desired direction. Hover over any country to see the specific information that will be displayed in a pop-up label. The map is color-coded based on the frequency of outbreaks in each country. Darker shades indicate a higher number of outbreaks, while lighter shades represent fewer outbreaks. The legend on the bottom left shows the number of outbreaks corresponding to each color.  To expand the map, click the icon in the bottom left corner of the map.\n\n\n\n\n\n\n\n\n\nUsage notes\n\n\n\n\n\nThe map presented here demonstrate the potential use of disease outbreaks data for the research community. By visualizing the geographic distribution of disease outbreaks, the map allows policymakers to identify the countries most vulnerable to outbreaks and assess their preparedness. This can inform the development of strategies and policies aimed at mitigating the spread of future outbreaks, considering regional susceptibility and resilience.  Further research using this database can integrate these findings with other sources to explore the factors driving countries’ exposure to pandemic- and epidemic-prone diseases, potentially improving response efforts in the future.\n\n\n\n\n\nThis map illustrates the global distribution of disease outbreaks that occurred between 2000 and 2023, encompassing all reported diseases. It provides a comprehensive overview of the regions most affected by outbreaks over the last two decades, allowing for an intuitive comparison of disease impact across different countries and regions.  Notably, there is a higher concentration of disease outbreaks in Sub-Saharan Africa. As discussed in Torres Munguía, Badarau, Díaz Pavez, Martínez-Zarzoso & Wacker (2022), the infectious diseases primarily driving this pattern include cholera, acute poliomyelitis, meningococcal meningitis, and yellow fever.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis map presents the distribution of disease outbreaks across Africa between 1996 and 2023 related to arthropod-borne viral fevers and viral haemorrhagic fevers. Arthropod-borne viral fevers (also known as arboviral diseases) are infections caused by viruses transmitted through bites from infected arthropods, such as mosquitoes and ticks. On the other hand, viral haemorrhagic fevers are spread primarily through the interaction of infected rodents and humans. Both of these groups of diseases are highly prone to epidemics and are classified under “A90-A99” in the International Classification of Diseases (ICD-10).  This map highlights the occurrence of arthropod-borne viral fevers and viral haemorrhagic fevers, including Chikungunya, Dengue, Yellow Fever, Zika Virus, Oropouche Virus, Lassa Fever, Ebola, and Marburg Virus Disease, among others. Many of these diseases are endemic in parts of Africa, leading to recurring outbreaks that pose significant public health challenges. By visualizing the outbreaks of these diseases, this map provides insights into the geographic spread and intensity of these epidemics, allowing for a clearer understanding of regions most affected by arboviral and haemorrhagic fevers over time.",
    "crumbs": [
      "Disease outbreaks map"
    ]
  },
  {
    "objectID": "content/blog/blog.html",
    "href": "content/blog/blog.html",
    "title": "Blog of the DISEASE OUTBREAKS DATA project",
    "section": "",
    "text": "This blog is dedicated to helping researchers, data scientists, and public health professionals make the most of the disease outbreaks data using R. A range of techniques and tools that allow you to explore, visualize, and analyze the dataset in powerful ways will be shared.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaking interactive choropleths for disease outbreaks data using leaflet in R\n\n\n\n\n\n\nleaflet\n\n\nmaps\n\n\ncode\n\n\n\n\n\n\nOct 15, 2024\n\n\nJuan Armando Torres Munguía, PhD\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/blog/posts/post-with-code/index.html",
    "href": "content/blog/posts/post-with-code/index.html",
    "title": "Making interactive maps for disease outbreaks data using leaflet in R",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "content/blog/posts/welcome/index.html",
    "href": "content/blog/posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html",
    "href": "content/blog/posts/how_to_maps/index.html",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "",
    "text": "In these notes, you’ll learn how to load the data from the GitHub repository of the disease outbreaks project and use the leaflet library in R to create a choropleth map showing the geographic distribution of disease outbreaks from 1996 to September 30, 2024.\nThe final output will look like this:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Load libraries\nThe following packages are required to replicate the choropleth map.\n\nlibrary(lubridate)\nlibrary(stringi)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(RColorBrewer)\nlibrary(htmltools)\nlibrary(sf)\nlibrary(bslib)\nlibrary(htmlwidgets)\n\n\n\nStep 2: Load data from GitHub\nNow, let’s fetch the latest disease outbreaks data from the GitHub repository using the GitHub API. The file’s name changes according to the last update, having a pattern beginning with the prefix “outbreaks_”, followed by the date of last update. For instance, for the version updated on September 30, 2024, the corresponding .csv file is outbreaks_30092024.csv.\n\n# URL to get the latest outbreak file\nurl_api &lt;- \"https://api.github.com/repos/jatorresmunguia/disease_outbreak_news/contents/Last%20update\"\n\n# Automatically detect the file ending with prefix 'outbreaks'\nlast_file &lt;- fromJSON(content(GET(url_api), as = \"text\"))$name[grepl(fromJSON(content(GET(url_api), as = \"text\"))$name, pattern = paste0(\"^outbreaks\"))]\n\n# Filter to find the CSV file\nrdata_file &lt;- last_file[grepl(\".csv$\", last_file)]\nfile_name &lt;- basename(rdata_file)\n\n# Load the outbreak data from the CSV file\noutbreaks &lt;- read.csv(paste0(\"https://raw.githubusercontent.com/jatorresmunguia/disease_outbreak_news/refs/heads/main/Last%20update\", \"/\", rdata_file), row.names = 1, header = TRUE)\n\n\n\nStep 3: Load geospatial data\nTo produce the choropleth maps, it is required to get the country administrative boundaries from a geospatial object. In this tutorial, the shapefile from Société OPENDATASOFT is used.\n\n# URL for the ZIP file containing the shapefile (administrative boundaries)\nurl &lt;- \"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/world-administrative-boundaries/exports/shp?lang=en&timezone=America%2FGuatemala\"\n\n# Create temporary file for the ZIP\ntemp_zip &lt;- tempfile(fileext = \".zip\")\n\n# Create a temporary directory to unzip the files\ntemp_dir &lt;- tempdir()\n\n# Download the ZIP file\ndownload.file(url, temp_zip, mode = \"wb\")\n\n# Unzip the file\nunzip(temp_zip, exdir = temp_dir)\n\n# Find the .shp file\nshp_file &lt;- list.files(temp_dir, pattern = \"\\\\.shp$\", full.names = TRUE)\n\n# Load the shapefile into R\nshpsf &lt;- st_read(shp_file, quiet = TRUE)\n\n# Cleaning the shapefile's ISO3 country codes\nshpsf[!is.na(shpsf$iso3) & shpsf$iso3 == \"IMY\", \"iso3\"] &lt;- \"IMN\"\nshpsf[!is.na(shpsf$name) & shpsf$name == \"Jersey\", \"iso3\"] &lt;- \"JEY\"\n\n\n\nStep 4: Reshape the data\nHere, we summarize the outbreaks data by iso3 code, year, and disease, and calculate the total number of outbreaks per country, and reshape to long format.\n\ndata_base &lt;- outbreaks |&gt; \n  # Group the data\n  group_by(iso3, Year, icd104n) |&gt; \n  # Summarize the number of outbreaks\n  summarise(count = n(), .groups = 'drop') |&gt; \n  # Reshape to wide format\n  pivot_wider(names_from = icd104n, values_from = count, values_fill = 0) \n\ndata_base &lt;- data_base |&gt; \n  # Replace missing values (NA) with 0\n  mutate(across(-c(iso3, Year), ~replace(., is.na(.), 0))) |&gt; \n  # Calculate the total outbreaks per country\n  mutate(`All diseases` = rowSums(across(-c(iso3, Year)))) |&gt; \n  # Reshape to long format\n  pivot_longer(!c(iso3, Year), names_to = \"Disease\", values_to = \"outbreaks\") \n\n\n\nStep 5: Add the geographic attributes to the outbreaks data\nAfter loading the shapefile containing the administrative boundaries for countries, we need to integrate this geographic information into the disease outbreaks data. To do this, we have to merge the data_base object with the shpsf using iso3 country codes as key variable.\n\noutbreaks_all &lt;- data_base |&gt; \n  # Filter the data to include only the \"All diseases\" category, which represents the total number of outbreaks per country.\n  filter(Disease == \"All diseases\") |&gt; \n  # Group the data by country code (iso3) and summarize the total number of outbreaks for each country.\n  group_by(iso3) |&gt; \n  summarise(outbreaks = sum(outbreaks)) |&gt; \n  # Perform a right join with the spatial data (`shpsf`) to combine the outbreak data with geographical boundaries.\n  right_join(shpsf, by = \"iso3\") |&gt; \n  # Convert the resulting data into a spatial data frame using `st_as_sf()` to prepare for mapping.\n  st_as_sf()\n\nNote: You can also use filter(between(Year, left = , right = )) to exclusively include a subset of observations by specifying a date range. For example, setting left = 2010 and right = 2020 would filter the data to only include outbreaks that occurred between 2010 and 2020. This is useful when you want to focus on a specific time period within your dataset.\n\n\nStep 6: Making the interactive map\nTo create the interactive choropleth map using leaflet library, we first set up a palette to categorize the number of outbreaks into bins, which is essential for visual differentiation on the choropleth map.\n\n# Define the color palette with bins for categorizing outbreak numbers\nmybins &lt;- c(0, 10, 20, 30, 40, 50, 60, 70)\nmypalette &lt;- colorBin(palette = \"PuRd\", \n                      domain = outbreaks_all$outbreaks,\n                      na.color = \"transparent\", bins = mybins)\n\nThen, we create labels to display the country name and the number of outbreaks when hovering over the choropleth map.\n\n# Create labels for each country\nmytext &lt;- paste0(\"&lt;b&gt;\", outbreaks_all$name, \"&lt;/b&gt;\", \"&lt;br/&gt;\",\n                outbreaks_all$outbreaks, \" \", \"outbreaks\"\n                ) |&gt; \n  lapply(htmltools::HTML)\n\nAdd a title for the map\n\n# Add map title\ntag.map.title &lt;- tags$style(HTML(\"\n  .leaflet-control.map-title { \n    left: 50%;  \n    transform: translateX(-50%);\n    text-align: left;\n    padding-left: 10px; \n    padding-right: 10px; \n    background: rgba(255,255,255,0.75);\n    font-weight: bold;\n    font-size: 20px;\n    color: black;\n  }\n\"))\n\n# Create the map\ntitle &lt;- tags$div(\n  tag.map.title, HTML(\"Geographic distribution of disease outbreaks, Jan 1996-Sep 2024\")\n)\n\nFinally, we set up the Leaflet map with tiles, polygons, labels, a legend, and a title.\nleaflet(outbreaks_all, options = leafletOptions(zoomControl = FALSE)) |&gt;\n  addTiles() |&gt; \n  addProviderTiles(providers$Esri.WorldTopoMap) |&gt;\n  setView(lat = 10, lng = 0, zoom = 2) |&gt;\n  # Add polygons for countries and their outbreak data\n  addPolygons(\n    fillColor = ~mypalette(outbreaks),\n    stroke = TRUE,\n    fillOpacity = 0.9,\n    color = \"white\",\n    weight = 0.3,\n    label = mytext,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"13px\",\n      direction = \"auto\"\n    )\n  ) |&gt;\n  # Add a legend to explain the color scale\n  addLegend(\n    pal = mypalette, values = ~outbreaks, opacity = 0.9,\n    title = \"Number of outbreaks:\",\n    position = \"bottomleft\"\n  ) |&gt;\n  # Add the title to the map\n  addControl(title, position = \"topleft\", className = \"map-title\") |&gt;\n  # Re-add the zoom control to the top-right corner\n  onRender(\"function(el, x) {\n          L.control.zoom({position:'topright'}).addTo(this);\n          }\")\n\n\nNote: You can add card(full_screen = TRUE) from bslib library to add an icon to expand the card’s size to the browser window."
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#introduction",
    "href": "content/blog/posts/how_to_maps/index.html#introduction",
    "title": "Making interactive maps for disease outbreaks data using leaflet in R",
    "section": "",
    "text": "In these notes, you’ll learn how to load and visualize disease outbreaks data from the project’s GitHub repository using R and the Leaflet library. The data is presented on an interactive map that shows the geographic distribution of disease outbreaks from 2000 to 2023."
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-1-loading-packages",
    "href": "content/blog/posts/how_to_maps/index.html#step-1-loading-packages",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 1: Loading packages",
    "text": "Step 1: Loading packages\nWe’ll start by loading the necessary libraries.\n\n# Setting up the environment\nSys.setenv(LANG = \"en\")\nlibrary(lubridate)\nlibrary(stringi)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(RColorBrewer)\nlibrary(htmltools)\nlibrary(sf)\nlibrary(bslib)\nlibrary(htmlwidgets)"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-2-loading-data-from-github",
    "href": "content/blog/posts/how_to_maps/index.html#step-2-loading-data-from-github",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 2: Loading Data from GitHub",
    "text": "Step 2: Loading Data from GitHub\nNow, let’s fetch the latest disease outbreaks data from the GitHub repository using the GitHub API.\n\n# URL to get the latest outbreak file\nurl_api &lt;- \"https://api.github.com/repos/jatorresmunguia/disease_outbreak_news/contents/Last%20update\"\nlast_file &lt;- fromJSON(content(GET(url_api), as = \"text\"))$name[grepl(fromJSON(content(GET(url_api), as = \"text\"))$name, pattern = paste0(\"^outbreaks\"))]\n\n# Filter the CSV file\nrdata_file &lt;- last_file[grepl(\".csv$\", last_file)]\nfile_name &lt;- basename(rdata_file)\n\n# Load the outbreak data from the CSV file\noutbreaks &lt;- read.csv(paste0(\"https://raw.githubusercontent.com/jatorresmunguia/disease_outbreak_news/refs/heads/main/Last%20update\", \"/\", rdata_file), row.names = 1, header = TRUE)\n\n# URL for the ZIP file containing the shapefile (administrative boundaries)\nurl &lt;- \"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/world-administrative-boundaries/exports/shp?lang=en&timezone=America%2FGuatemala\"\n\n# Create temporary file for the ZIP\ntemp_zip &lt;- tempfile(fileext = \".zip\")\n\n# Create a temporary directory to unzip the files\ntemp_dir &lt;- tempdir()\n\n# Download the ZIP file\ndownload.file(url, temp_zip, mode = \"wb\")\n\n# Unzip the file\nunzip(temp_zip, exdir = temp_dir)\n\n# Find the .shp file\nshp_file &lt;- list.files(temp_dir, pattern = \"\\\\.shp$\", full.names = TRUE)\n\n# Load the shapefile into R\nshpsf &lt;- st_read(shp_file)\n\nReading layer `world-administrative-boundaries' from data source \n  `C:\\Users\\jator\\AppData\\Local\\Temp\\RtmpA5JMjg\\world-administrative-boundaries.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 256 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -58.49861 xmax: 180 ymax: 83.6236\nGeodetic CRS:  WGS 84\n\n# Cleaning the shapefile's ISO3 country codes\nshpsf[!is.na(shpsf$iso3) & shpsf$iso3 == \"IMY\", \"iso3\"] &lt;- \"IMN\"\nshpsf[!is.na(shpsf$name) & shpsf$name == \"Jersey\", \"iso3\"] &lt;- \"JEY\""
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-3-transforming-the-data-into-a-shapefile",
    "href": "content/blog/posts/how_to_maps/index.html#step-3-transforming-the-data-into-a-shapefile",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 3: Transforming the data into a shapefile",
    "text": "Step 3: Transforming the data into a shapefile\nNext, we’ll download and load a shapefile that contains administrative boundaries for countries. We’ll use this shapefile to visualize the disease outbreaks by geographic location.\n\n# URL for the ZIP file containing the shapefile (administrative boundaries)\nurl &lt;- \"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/world-administrative-boundaries/exports/shp?lang=en&timezone=America%2FGuatemala\"\n\n# Create temporary file for the ZIP\ntemp_zip &lt;- tempfile(fileext = \".zip\")\n\n# Create a temporary directory to unzip the files\ntemp_dir &lt;- tempdir()\n\n# Download the ZIP file\ndownload.file(url, temp_zip, mode = \"wb\")\n\n# Unzip the file\nunzip(temp_zip, exdir = temp_dir)\n\n# Find the .shp file\nshp_file &lt;- list.files(temp_dir, pattern = \"\\\\.shp$\", full.names = TRUE)\n\n# Load the shapefile into R\nshpsf &lt;- st_read(shp_file)\n\nReading layer `world-administrative-boundaries' from data source \n  `C:\\Users\\jator\\AppData\\Local\\Temp\\RtmpA5JMjg\\world-administrative-boundaries.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 256 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -58.49861 xmax: 180 ymax: 83.6236\nGeodetic CRS:  WGS 84\n\n# Cleaning the shapefile's ISO3 country codes\nshpsf[!is.na(shpsf$iso3) & shpsf$iso3 == \"IMY\", \"iso3\"] &lt;- \"IMN\"\nshpsf[!is.na(shpsf$name) & shpsf$name == \"Jersey\", \"iso3\"] &lt;- \"JEY\""
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-3-merge-the-outbreaks-data-with-shapefile-by-iso3-country-code",
    "href": "content/blog/posts/how_to_maps/index.html#step-3-merge-the-outbreaks-data-with-shapefile-by-iso3-country-code",
    "title": "Making interactive maps for disease outbreaks data using leaflet in R",
    "section": "Step 3: Merge the outbreaks data with shapefile by ISO3 country code",
    "text": "Step 3: Merge the outbreaks data with shapefile by ISO3 country code\n\n# Merge the outbreaks data with shapefile by ISO3 country code\noutbreaks &lt;- outbreaks |&gt;\n  mutate(iso3 = case_when(Country == \"Bonaire Sint Eustatius and Saba\" ~ \"BES\",\n                          TRUE ~ iso3))\n\n# Define the range of years for which the outbreaks data is available\nrep_year &lt;- length(na.omit(unique(shpsf$iso3)))\nrep_country &lt;- length(1996:2024)\n\n# Create a base dataset with all years and countries\ndata_base &lt;- data.frame(iso3 = rep(na.omit(unique(shpsf$iso3)), times = rep_country),\n                        Year = rep(1996:2024, each = rep_year))\n\n# Merge the country names from the shapefile\ncountry_iso &lt;- na.omit(unique(shpsf[, c(\"name\", \"iso3\")]))\ndata_base &lt;- data_base |&gt;\n  left_join(country_iso, by = \"iso3\")\n\n# Select relevant columns from the outbreaks data\noutbreaks_sub &lt;- outbreaks |&gt; \n  select(iso3, Year, icd104n, DONs) |&gt; \n  mutate(Year = as.integer(Year)) |&gt;\n  mutate(Ones = 1)\n\n# Summarize the outbreaks data by ISO3 code, year, and disease\noutbreaks104n &lt;- outbreaks_sub |&gt; \n  group_by(iso3, Year, icd104n) |&gt; \n  summarise(Ones = sum(Ones, na.rm = TRUE), .groups = 'drop') |&gt; \n  pivot_wider(names_from = icd104n, values_from = Ones, values_fill = 0)\n\n# Merge the summarized outbreaks data with the base dataset\ndata_base &lt;- data_base |&gt; \n  mutate(Country = name) |&gt;\n  select(Country, iso3, Year) |&gt;\n  left_join(outbreaks104n, by = c(\"iso3\", \"Year\"))\n\n# Replace NA values with 0 and calculate the total outbreaks per country\ndata_base &lt;- data_base |&gt; \n  mutate(across(-c(Country, iso3, Year), ~replace(., is.na(.), 0))) |&gt; \n  mutate(`All diseases` = rowSums(across(-c(Country, iso3, Year)))) |&gt; \n  pivot_longer(!c(Country, iso3, Year), names_to = \"Disease\", values_to = \"outbreaks\")\n\n# Output the sum of all outbreaks for validation\nsum(data_base[data_base$Disease == \"All diseases\", \"outbreaks\"])\n\n[1] 3014"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-4-preparing-the-data",
    "href": "content/blog/posts/how_to_maps/index.html#step-4-preparing-the-data",
    "title": "Making interactive maps for disease outbreaks data using leaflet in R",
    "section": "Step 4: Preparing the Data",
    "text": "Step 4: Preparing the Data\nHere, we join the outbreaks data with the shapefile and prepare the dataset for analysis by filling in missing values and organizing by year and country. We’ll filter the data to focus on outbreaks from 2000 to 2023 and sum up the number of outbreaks per country.\n\n# Filter the data to focus on outbreaks from 2000 to 2023\noutbreaks_all &lt;- data_base |&gt; \n  filter(between(Year, left = 2000, right = 2023)) |&gt;\n  filter(Disease == \"All diseases\") |&gt;\n  group_by(Country, iso3) |&gt;\n  summarise(outbreaks = sum(outbreaks)) |&gt;\n  right_join(shpsf, by = \"iso3\") |&gt;\n  st_as_sf()"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-5-making-the-interactive-map",
    "href": "content/blog/posts/how_to_maps/index.html#step-5-making-the-interactive-map",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 5: Making the interactive map",
    "text": "Step 5: Making the interactive map\nFinally, we’ll create an interactive map using Leaflet, color-coded to show the number of outbreaks in each country.\n\n# Define the color palette\nmybins &lt;- c(0, 10, 20, 30, 40, 50, 60)\nmypalette &lt;- colorBin(palette = \"PuRd\", \n                      domain = outbreaks_all$outbreaks,\n                      na.color = \"transparent\", bins = mybins)\n\n# Create labels for each country\nmytext &lt;- paste0(\"&lt;b&gt;\", outbreaks_all$name, \"&lt;/b&gt;\", \"&lt;br/&gt;\",\n                outbreaks_all$outbreaks, \" \", \"outbreaks\"\n                ) |&gt; \n  lapply(htmltools::HTML)\n\n# Add map title\ntag.map.title &lt;- tags$style(HTML(\"\n  .leaflet-control.map-title { \n    left: 50%;  \n    transform: translateX(-50%);\n    text-align: left;\n    padding-left: 10px; \n    padding-right: 10px; \n    background: rgba(255,255,255,0.75);\n    font-weight: bold;\n    font-size: 20px;\n    color: black;\n  }\n\"))\n\n# Create the map\ntitle &lt;- tags$div(\n  tag.map.title, HTML(\"Geographic distribution of disease outbreaks, 2000-2023\")\n)\n\nleaflet(outbreaks_all, options = leafletOptions(zoomControl = FALSE)) |&gt;\n  addTiles() |&gt; \n  addProviderTiles(providers$Esri.WorldTopoMap) |&gt;\n  setView(lat = 10, lng = 0, zoom = 2) |&gt;\n  addPolygons(\n    fillColor = ~mypalette(outbreaks),\n    stroke = TRUE,\n    fillOpacity = 0.9,\n    color = \"white\",\n    weight = 0.3,\n    label = mytext,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"13px\",\n      direction = \"auto\"\n    )\n  ) |&gt;\n  addLegend(\n    pal = mypalette, values = ~outbreaks, opacity = 0.9,\n    title = \"Number of outbreaks:\",\n    position = \"bottomleft\"\n  ) |&gt;\n  addControl(title, position = \"topleft\", className = \"map-title\") |&gt;\n  onRender(\"function(el, x) {\n          L.control.zoom({position:'topright'}).addTo(this);\n          }\")\n\nHere is the final output"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-4-merging-data",
    "href": "content/blog/posts/how_to_maps/index.html#step-4-merging-data",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 4: Merging Data",
    "text": "Step 4: Merging Data\nNow, we’ll merge the disease outbreak data with the shapefile using ISO3 country codes and clean up the dataset.\n\n# Merge the outbreaks data with shapefile by ISO3 country code\noutbreaks &lt;- outbreaks |&gt;\n  mutate(iso3 = case_when(Country == \"Bonaire Sint Eustatius and Saba\" ~ \"BES\",\n                          TRUE ~ iso3))\n\n# Define the range of years for which the outbreaks data is available\nrep_year &lt;- length(na.omit(unique(shpsf$iso3)))\nrep_country &lt;- length(1996:2024)\n\n# Create a base dataset with all years and countries\ndata_base &lt;- data.frame(iso3 = rep(na.omit(unique(shpsf$iso3)), times = rep_country),\n                        Year = rep(1996:2024, each = rep_year))\n\n# Merge the country names from the shapefile\ncountry_iso &lt;- na.omit(unique(shpsf[, c(\"name\", \"iso3\")]))\ndata_base &lt;- data_base |&gt;\n  left_join(country_iso, by = \"iso3\")\n\n# Select relevant columns from the outbreaks data\noutbreaks_sub &lt;- outbreaks |&gt; \n  select(iso3, Year, icd104n, DONs) |&gt; \n  mutate(Year = as.integer(Year)) |&gt;\n  mutate(Ones = 1)\n\n# Summarize the outbreaks data by ISO3 code, year, and disease\noutbreaks104n &lt;- outbreaks_sub |&gt; \n  group_by(iso3, Year, icd104n) |&gt; \n  summarise(Ones = sum(Ones, na.rm = TRUE), .groups = 'drop') |&gt; \n  pivot_wider(names_from = icd104n, values_from = Ones, values_fill = 0)\n\n# Merge the summarized outbreaks data with the base dataset\ndata_base &lt;- data_base |&gt; \n  mutate(Country = name) |&gt;\n  select(Country, iso3, Year) |&gt;\n  left_join(outbreaks104n, by = c(\"iso3\", \"Year\"))\n\n# Replace NA values with 0 and calculate the total outbreaks per country\ndata_base &lt;- data_base |&gt; \n  mutate(across(-c(Country, iso3, Year), ~replace(., is.na(.), 0))) |&gt; \n  mutate(`All diseases` = rowSums(across(-c(Country, iso3, Year)))) |&gt; \n  pivot_longer(!c(Country, iso3, Year), names_to = \"Disease\", values_to = \"outbreaks\")"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-5-filter-data-for-analysis",
    "href": "content/blog/posts/how_to_maps/index.html#step-5-filter-data-for-analysis",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 5: Filter Data for Analysis",
    "text": "Step 5: Filter Data for Analysis\nWe’ll now filter the data to include only outbreaks between 2000 and 2023 and sum the total number of outbreaks for each country.\n\n# Filter the data to focus on outbreaks from 2000 to 2023\noutbreaks_all &lt;- data_base |&gt; \n  filter(between(Year, left = 2000, right = 2023)) |&gt;\n  filter(Disease == \"All diseases\") |&gt;\n  group_by(Country, iso3) |&gt;\n  summarise(outbreaks = sum(outbreaks)) |&gt;\n  right_join(shpsf, by = \"iso3\") |&gt;\n  st_as_sf()"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-1-load-libraries",
    "href": "content/blog/posts/how_to_maps/index.html#step-1-load-libraries",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 1: Load libraries",
    "text": "Step 1: Load libraries\nThe following packages are required to replicate the choropleth map.\n\nlibrary(lubridate)\nlibrary(stringi)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(RColorBrewer)\nlibrary(htmltools)\nlibrary(sf)\nlibrary(bslib)\nlibrary(htmlwidgets)"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-2-load-data-from-github",
    "href": "content/blog/posts/how_to_maps/index.html#step-2-load-data-from-github",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 2: Load data from GitHub",
    "text": "Step 2: Load data from GitHub\nNow, let’s fetch the latest disease outbreaks data from the GitHub repository using the GitHub API. The file’s name changes according to the last update, having a pattern beginning with the prefix “outbreaks_”, followed by the date of last update. For instance, for the version updated on September 30, 2024, the corresponding .csv file is outbreaks_30092024.csv.\n\n# URL to get the latest outbreak file\nurl_api &lt;- \"https://api.github.com/repos/jatorresmunguia/disease_outbreak_news/contents/Last%20update\"\n\n# Automatically detect the file ending with prefix 'outbreaks'\nlast_file &lt;- fromJSON(content(GET(url_api), as = \"text\"))$name[grepl(fromJSON(content(GET(url_api), as = \"text\"))$name, pattern = paste0(\"^outbreaks\"))]\n\n# Filter to find the CSV file\nrdata_file &lt;- last_file[grepl(\".csv$\", last_file)]\nfile_name &lt;- basename(rdata_file)\n\n# Load the outbreak data from the CSV file\noutbreaks &lt;- read.csv(paste0(\"https://raw.githubusercontent.com/jatorresmunguia/disease_outbreak_news/refs/heads/main/Last%20update\", \"/\", rdata_file), row.names = 1, header = TRUE)"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-3-load-geospatial-data",
    "href": "content/blog/posts/how_to_maps/index.html#step-3-load-geospatial-data",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 3: Load geospatial data",
    "text": "Step 3: Load geospatial data\nTo produce the choropleth maps, it is required to get the country administrative boundaries from a geospatial object. In this tutorial, the shapefile from Société OPENDATASOFT is used.\n\n# URL for the ZIP file containing the shapefile (administrative boundaries)\nurl &lt;- \"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/world-administrative-boundaries/exports/shp?lang=en&timezone=America%2FGuatemala\"\n\n# Create temporary file for the ZIP\ntemp_zip &lt;- tempfile(fileext = \".zip\")\n\n# Create a temporary directory to unzip the files\ntemp_dir &lt;- tempdir()\n\n# Download the ZIP file\ndownload.file(url, temp_zip, mode = \"wb\")\n\n# Unzip the file\nunzip(temp_zip, exdir = temp_dir)\n\n# Find the .shp file\nshp_file &lt;- list.files(temp_dir, pattern = \"\\\\.shp$\", full.names = TRUE)\n\n# Load the shapefile into R\nshpsf &lt;- st_read(shp_file, quiet = TRUE)\n\n# Cleaning the shapefile's ISO3 country codes\nshpsf[!is.na(shpsf$iso3) & shpsf$iso3 == \"IMY\", \"iso3\"] &lt;- \"IMN\"\nshpsf[!is.na(shpsf$name) & shpsf$name == \"Jersey\", \"iso3\"] &lt;- \"JEY\""
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-4-reshape-the-data",
    "href": "content/blog/posts/how_to_maps/index.html#step-4-reshape-the-data",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 4: Reshape the data",
    "text": "Step 4: Reshape the data\nHere, we summarize the outbreaks data by iso3 code, year, and disease, and calculate the total number of outbreaks per country, and reshape to long format.\n\ndata_base &lt;- outbreaks |&gt; \n  # Group the data\n  group_by(iso3, Year, icd104n) |&gt; \n  # Summarize the number of outbreaks\n  summarise(count = n(), .groups = 'drop') |&gt; \n  # Reshape to wide format\n  pivot_wider(names_from = icd104n, values_from = count, values_fill = 0) \n\ndata_base &lt;- data_base |&gt; \n  # Replace missing values (NA) with 0\n  mutate(across(-c(iso3, Year), ~replace(., is.na(.), 0))) |&gt; \n  # Calculate the total outbreaks per country\n  mutate(`All diseases` = rowSums(across(-c(iso3, Year)))) |&gt; \n  # Reshape to long format\n  pivot_longer(!c(iso3, Year), names_to = \"Disease\", values_to = \"outbreaks\")"
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-5-add-the-geographic-attributes-to-the-outbreaks-data",
    "href": "content/blog/posts/how_to_maps/index.html#step-5-add-the-geographic-attributes-to-the-outbreaks-data",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 5: Add the geographic attributes to the outbreaks data",
    "text": "Step 5: Add the geographic attributes to the outbreaks data\nAfter loading the shapefile containing the administrative boundaries for countries, we need to integrate this geographic information into the disease outbreaks data. To do this, we have to merge the data_base object with the shpsf using iso3 country codes as key variable.\n\noutbreaks_all &lt;- data_base |&gt; \n  # Filter the data to include only the \"All diseases\" category, which represents the total number of outbreaks per country.\n  filter(Disease == \"All diseases\") |&gt; \n  # Group the data by country code (iso3) and summarize the total number of outbreaks for each country.\n  group_by(iso3) |&gt; \n  summarise(outbreaks = sum(outbreaks)) |&gt; \n  # Perform a right join with the spatial data (`shpsf`) to combine the outbreak data with geographical boundaries.\n  right_join(shpsf, by = \"iso3\") |&gt; \n  # Convert the resulting data into a spatial data frame using `st_as_sf()` to prepare for mapping.\n  st_as_sf()\n\nNote: You can also use filter(between(Year, left = , right = )) to exclusively include a subset of observations by specifying a date range. For example, setting left = 2010 and right = 2020 would filter the data to only include outbreaks that occurred between 2010 and 2020. This is useful when you want to focus on a specific time period within your dataset."
  },
  {
    "objectID": "content/blog/posts/how_to_maps/index.html#step-6-making-the-interactive-map",
    "href": "content/blog/posts/how_to_maps/index.html#step-6-making-the-interactive-map",
    "title": "Making interactive choropleths for disease outbreaks data using leaflet in R",
    "section": "Step 6: Making the interactive map",
    "text": "Step 6: Making the interactive map\nTo create the interactive choropleth map using leaflet library, we first set up a palette to categorize the number of outbreaks into bins, which is essential for visual differentiation on the choropleth map.\n\n# Define the color palette with bins for categorizing outbreak numbers\nmybins &lt;- c(0, 10, 20, 30, 40, 50, 60, 70)\nmypalette &lt;- colorBin(palette = \"PuRd\", \n                      domain = outbreaks_all$outbreaks,\n                      na.color = \"transparent\", bins = mybins)\n\nThen, we create labels to display the country name and the number of outbreaks when hovering over the choropleth map.\n\n# Create labels for each country\nmytext &lt;- paste0(\"&lt;b&gt;\", outbreaks_all$name, \"&lt;/b&gt;\", \"&lt;br/&gt;\",\n                outbreaks_all$outbreaks, \" \", \"outbreaks\"\n                ) |&gt; \n  lapply(htmltools::HTML)\n\nAdd a title for the map\n\n# Add map title\ntag.map.title &lt;- tags$style(HTML(\"\n  .leaflet-control.map-title { \n    left: 50%;  \n    transform: translateX(-50%);\n    text-align: left;\n    padding-left: 10px; \n    padding-right: 10px; \n    background: rgba(255,255,255,0.75);\n    font-weight: bold;\n    font-size: 20px;\n    color: black;\n  }\n\"))\n\n# Create the map\ntitle &lt;- tags$div(\n  tag.map.title, HTML(\"Geographic distribution of disease outbreaks, Jan 1996-Sep 2024\")\n)\n\nFinally, we set up the Leaflet map with tiles, polygons, labels, a legend, and a title.\nleaflet(outbreaks_all, options = leafletOptions(zoomControl = FALSE)) |&gt;\n  addTiles() |&gt; \n  addProviderTiles(providers$Esri.WorldTopoMap) |&gt;\n  setView(lat = 10, lng = 0, zoom = 2) |&gt;\n  # Add polygons for countries and their outbreak data\n  addPolygons(\n    fillColor = ~mypalette(outbreaks),\n    stroke = TRUE,\n    fillOpacity = 0.9,\n    color = \"white\",\n    weight = 0.3,\n    label = mytext,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"13px\",\n      direction = \"auto\"\n    )\n  ) |&gt;\n  # Add a legend to explain the color scale\n  addLegend(\n    pal = mypalette, values = ~outbreaks, opacity = 0.9,\n    title = \"Number of outbreaks:\",\n    position = \"bottomleft\"\n  ) |&gt;\n  # Add the title to the map\n  addControl(title, position = \"topleft\", className = \"map-title\") |&gt;\n  # Re-add the zoom control to the top-right corner\n  onRender(\"function(el, x) {\n          L.control.zoom({position:'topright'}).addTo(this);\n          }\")\n\n\nNote: You can add card(full_screen = TRUE) from bslib library to add an icon to expand the card’s size to the browser window."
  },
  {
    "objectID": "content/about/about.html",
    "href": "content/about/about.html",
    "title": "About the DISEASE OUTBREAKS DATA project",
    "section": "",
    "text": "The DISEASE OUTBREAKS DATA project arose from the need for open, reliable information on pandemic- and epidemic-prone disease outbreaks, offering broad coverage of diseases, time periods, and geography, and ensuring statistical soundness for research purposes.\nThe dataset is the result of a collaborative effort by a team of researchers from the University of Göttingen, the University of Groningen, and the University of Bordeaux. The project was made possible through financial support from the ENLIGHT network, the German Academic Exchange Service (DAAD), and the Federal Ministry of Education and Research (BMBF) in Germany.\nIn the first version of the dataset, a total of 2227 outbreaks of 70 different infectious diseases were found, occurring in a total of 233 countries and territories from January 1996 until March 2022. These findings are published in Springer Nature’s Scientific Data. Read the paper by clicking here! Additionally, the data, metadata, and the code to replicate the first version of this dataset are publicly available on Figshare. You can download them by clicking here!.\n\n\n\n\n\n\nUnit of analysis\n\n\n\n\n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\n\n\n\n\n\n\n\n\nTime & geographic data coverage\n\n\n\n\n\nThe last version of the dataset contains information on 3050 outbreaks:  Temporal coverage: 01/01/1996 - 30/09/2024  Geographic coverage: 236  Number of diseases included: 85\n\n\n\n\nMethodology\n\nSource\nThe sources for the DISEASE OUTBREAKS DATA project are the Disease Outbreak News (DONs) and the Coronavirus Dashboard produced by the World Health Organization (WHO). This information is issued under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Intergovernmental Organization (CC BY-NC-SA 3.0 IGO) license, which allows users to freely copy, reproduce, reprint, distribute, translate, and adapt WHO materials for non-commercial purposes.\nThe information from the DONs includes all reports on confirmed acute public health events or potential events of concern that have occurred since 1996. Specifically, DONs include events of:\n\nUnknown cause but with significant or potential health concern that may affect international travel or trade.\nKnown cause with demonstrated ability to produce a serious public health impact and spread internationally.\nHigh public concern that could potentially disrupt required public health interventions or international travel and trade.\n\nThe Coronavirus Dashboard presents information reported by official public health authorities from countries and territories worldwide.\n\n\n\nData collection and integration processes\nThe following figure provides a schematic overview of the data collection and integration processes used in the disease outbreaks data project.\n\n\nSchematic Overview of Data Collection and Integration Processes\n\n\n\n(A) Data collection and database of the DONs; (B) Data collection and database of the Coronavirus Dashboard; (C) Geo-spatial information.  Source: Torres Munguía, Badarau, Díaz Pavez, Martínez-Zarzoso & Wacker. A global dataset of pandemic- and epidemic-prone disease outbreaks. Sci Data 9, 683 (2022).  https://doi.org/10.1038/s41597-022-01797-2\n\n\nIn stage (A), DONs are collected from the WHO website. This process was automated using an R script to extract the information from the DONs. The earliest DON records a cholera outbreak reported on 22 January 1996 in Cabo Verde, Côte d’Ivoire, the Islamic Republic of Iran, Iraq, and Senegal.\nTo ensure standardized concepts and definitions, official short country names in English, according to ISO-3166-23 and International Statistical Classification of Diseases and Related Health Problems 10th Revision, are used.\nThree recording issues need to be tackled at stage (A):\n\nSome DONs report multiple diseases.\nSome DONs report disease outbreaks occurring in more than one country.\nSome DONs register the same outbreak multiple times due to situation updates.\n\nTo resolve these issues at stage (A):\n\nFor DONs reporting more than one disease (for instance, DON0065 on influenza and malaria in Ghana, or DON1094 on chikungunya and dengue in the southwest Indian Ocean) and/or reporting more than one country (e.g., DON1540 about an outbreak of polio in Angola and the Democratic Republic of the Congo, or DON0617 on a meningococcal disease outbreak in the Great Lakes area) the DON is replicated for each diseases (or country). For instance, DON0617 informs of an outbreak that occurred in Burundi, Rwanda, and Tanzania (Great Lakes area). Therefore, this DON was registered three times, one for each country.\nTo avoid multiplicity issues, we deleted all DONs that reported the same disease in the same country more than once in a calendar year. Variants or mutations of viruses, such as avian influenza A(H1N1), A(H1N2), A(H5N1), A(H3N2), etc., were considered the same disease, i.e., influenza due to identified zoonotic or pandemic influenza virus. This ensured only one observation per disease, country, and year.\n\nIn stage (B), given that outbreaks related to COVID-19 are not included in the DONs, this information is extracted from the Coronavirus Dashboard. Specifically, we dichotomized the data on cases per country per year, assigning a value of one if a country had at least one reported case of Coronavirus, and zero otherwise. For standardization, we followed the same approach as in stage (A), using the official short country names in English according to ISO-3166-23 and ICD-10-31.\nIn stage (C), the geographic information from the World Administrative Boundaries - Countries and Territories dataset by Société OPENDATASOFT (available at this link) is merged with the resulting data from stages (A) and (B)."
  }
]